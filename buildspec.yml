version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - COMMIT=`git rev-parse --short HEAD`
    - BRANCH=`git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || echo ''`
    - TAG=`git describe --tags --exact-match 2> /dev/null || echo ''`
    - BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
    - echo "Branchtag ${BRANCHTAG}"

    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain cdlib-uc3-mrt --domain-owner $AWS_ACCOUNT_ID --region $AWS_REGION --query authorizationToken --output text`
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}

    - aws ecr create-repository --repository-name merritt-tomcat || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-it-database || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-it-database-audit-replic || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-minio-it || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-minio-it-with-content || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name fakesmtp || echo 'ignore if exists...'

    - aws ecr create-repository --repository-name callback || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-opendj || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-init || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name mrt-database || echo 'ignore if exists...'

  build:
    on-failure: ABORT
    commands:
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/merritt-tomcat:dev \
        mrt-inttest-services/merritt-tomcat
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mock-merritt-it:dev \
        mrt-inttest-services/mock-merritt-it
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-it-database:dev \
        mrt-inttest-services/mrt-it-database
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-it-database-audit-replic:dev \
        --build-arg LOAD_SQL=/tmp/audit_replic_data.sql \
        mrt-inttest-services/mrt-it-database
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-minio-it:dev \
        mrt-inttest-services/mrt-minio-it
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-minio-it-with-content:dev \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        mrt-inttest-services/mrt-minio-it-with-content

    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-database \
        mrt-services/mysql
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-opendj \
        mrt-services/ldap
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-init \
        mrt-services/merritt-init
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/callback \
        mrt-services/callback

  post_build:
    # this build may fail due to rate limits
    on-failure: CONTINUE
    commands:
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/fakesmtp:dev \
        --push mrt-inttest-services/fakesmtp
