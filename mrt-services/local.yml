#*********************************************************************
#   Copyright 2019 Regents of the University of California
#   All rights reserved
#*********************************************************************
version: '3.9'
services:
  ingest:
    image: it-docker-registry/mrt-ingest:dev
    build:
      args:
        ECR_REGISTRY: it-docker-registry
  store:
    image: it-docker-registry/mrt-store:dev
    build:
      args:
        ECR_REGISTRY: it-docker-registry
    environment:
      MRT_DOCKER_HOST: my-minio-localhost-alias
      MRT_MINIO_HOST: my-minio-localhost-alias
    networks:
      merrittnet:
        aliases:
        - my-minio-localhost-alias
        - localhost
  inventory:
    image: it-docker-registry/mrt-inventory:dev
    build:
      args:
        ECR_REGISTRY: it-docker-registry
  zoo:
    image: it-docker-registry/zoo-with-merritt-tools:dev
    build:
      args:
        ECR_REGISTRY: it-docker-registry
  ui:
    image: it-docker-registry/mrt-dashboard
    networks:
      merrittnet:
        aliases:
        - my-minio-localhost-alias
        - localhost
    environment:
      MRT_DOCKER_HOST: localhost
  db-container:
    image: it-docker-registry/mrt-database
  ldap:
    image: it-docker-registry/mrt-opendj
  minio:
    networks:
      merrittnet:
        aliases:
        - my-minio-localhost-alias
        - localhost
  ezid:
    image: it-docker-registry/mock-merritt-it:dev
  merritt-init:
    image: it-docker-registry/mrt-init
  lambda-container:
    # The Merritt Admin Tool needs only the database to run. It does not need this stack to run.
    # The Merritt Collection Admin Tool can be tested from this application stack.
    image: it-docker-registry/uc3-mrt-colladmin-lambda:dev
    build:
      context: scratch
      dockerfile: Dockerfile
      args:
        ECR_REGISTRY: it-docker-registry
    environment:
      COLLADMIN_ALB_URL: http://localhost:8091
  alb-simulate:
    image: it-docker-registry/simulate-lambda-alb
  replic:
    image: it-docker-registry/mrt-replic:dev
    build:
      args:
        ECR_REGISTRY: it-docker-registry
  audit:
    image: it-docker-registry/mrt-audit:dev
    build:
      args:
        ECR_REGISTRY: it-docker-registry
  callback:
    image: it-docker-registry/mrt-callback
