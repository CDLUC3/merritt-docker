# docker gelf log-driver -> Logstash -> OpenSearch pipeline.

input {
  file {
    type => "tomcat_access"
    path => "/logfiles/*/localhost_access*"
    start_position => "beginning"
   }
  file {
    type => "ui"
    path => "/logfiles/*/docker.log"
    start_position => "beginning"
   }
}

filter {
  if [type] == "ui" {
    if " Started " in [message] { 
      grok {
        # [92c44168-f7e1-4775-a4db-24a3aaea8791] Started GET "/" for 172.31.49.209 at 2023-05-23 15:24:00 -0700
        pattern_definitions => { 
          "URIPATHPARAM" => "%{URIPATH:request_path}(?:%{URIPARAM:request_params})?"
        }
        match => {
          "message" => '\[%{NOTSPACE:request_id}\] Started %{WORD:verb} "%{URIPATHPARAM}" for %{IPORHOST:serverip} at %{TIMESTAMP_ISO8601:timestamp}'
        }
      }
    }
    else if " Completed " in [message] { 
      grok {
        # [92c44168-f7e1-4775-a4db-24a3aaea8791] Completed 200 OK in 24ms (Views: 22.7ms | Allocations: 6874)
        # [4c9aef95-b4cd-4009-b7a0-cf0463719b94] Completed 200 OK in 38ms (Views: 1.8ms | ActiveRecord: 0.0ms | Allocations: 3405)
        match => {
          "message" => '[%{NOTSPACE:request_id}] Completed %{NUMBER:status:int} %{WORD:status_message} in %{NUMBER:duration:int}ms \(Views: %{NUMBER:duration_views:float}ms (\| ActiveRecord: %{NUMBER:active_record:float}ms )?\| Allocations: %{NUMBER:allocations:int}\)'
        }
      }
    }
    else {
      drop {}
    }
  }
  else if [type] == "tomcat_access" {
    grok {
      #10.10.179.7 - - [19/May/2023:00:03:37 +0000] "GET /foo.txt HTTP/1.1" 404 758
      pattern_definitions => { 
        "REQUEST_LINE" => "(?:%{WORD:verb} %{URIPATHPARAM:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})"
        "URIPATHPARAM" => "%{URIPATH:request_path}(?:%{URIPARAM:request_params})?"
      }
      match => {
        "message" => '%{IPORHOST:serverip} - - \[(?<timestamp>%{MONTHDAY}/%{MONTH}/%{YEAR}:%{TIME} [\+\-][0-9]{4,4})\] "%{REQUEST_LINE}" %{INT:response:int} %{INT:received_bytes:int}'
      }
      overwrite => [ "message" ]
      remove_field => [ "ident", "auth" ]
    }
    useragent {
      source => "agent"
      target => "ua"
      remove_field => [ "agent" ]
    }
  }
}

output {
  opensearch {
    hosts => ["https://opensearch:9200"]
    #index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    user => "admin"
    password => "admin"
    ssl_certificate_verification => false
  }
}

